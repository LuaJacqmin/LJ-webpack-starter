/* SCSS imports */
/* imports */
/* FONTS */
/* FONT SIZE */
/* COLORS */
/* OTHERS */
/* Grid variables. Feel free to modidy them to fit your design */
/* dont change these variable, they'll adapt automatically based on mesures available in gridsVariables.scss */
/*------------MIXINS--------------*/
/* adding padding on sides. Don't use it with grid mixin */
/* apply a grid based on the mesures you set in GridsVariable.scss */
/* place an element using column layout. */
/* set width of an element based on the grid columns. Size rendered in pixels*/
/* set width of an element based on the grid columns. Size rendered in pixels*/
/* set a classic grid-column + make sure the element takes all the width it could*/
/* display visual grid */
.grid {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
  transform-origin: top;
  animation-name: grow;
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  animation-timing-function: linear;
  z-index: 300000;
}
.grid li {
  background-color: #5c8846;
  list-style-type: none;
  opacity: 0.5;
}
.grid__desk {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 50px;
  grid-row-gap: 8px;
  padding-left: 15vw;
  padding-right: 15vw;
  height: 100%;
  margin: 0;
}
@media (min-width: 600px) {
  .grid__desk {
    grid-template-columns: repeat(8, 1fr);
    grid-column-gap: 50px;
    grid-row-gap: 8px;
    padding-left: 10vw;
    padding-right: 10vw;
  }
}
@media (min-width: 1000px) {
  .grid__desk {
    grid-template-columns: repeat(12, 1fr);
    grid-column-gap: 50px;
    grid-row-gap: 8px;
    padding-left: 20vw;
    padding-right: 20vw;
  }
}
@media (min-width: 1200px) {
  .grid__desk {
    width: 1200px;
    padding-left: calc((100vw - 1200px)/2);
    padding-right: calc((100vw - 1200px)/2);
  }
}
@media (max-width: 1000px) {
  .grid__desk {
    display: none;
  }
}
.grid__tablet {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 50px;
  grid-row-gap: 8px;
  padding-left: 15vw;
  padding-right: 15vw;
  height: 100%;
  margin: 0;
  display: none;
}
@media (min-width: 600px) {
  .grid__tablet {
    grid-template-columns: repeat(8, 1fr);
    grid-column-gap: 50px;
    grid-row-gap: 8px;
    padding-left: 10vw;
    padding-right: 10vw;
  }
}
@media (min-width: 1000px) {
  .grid__tablet {
    grid-template-columns: repeat(12, 1fr);
    grid-column-gap: 50px;
    grid-row-gap: 8px;
    padding-left: 20vw;
    padding-right: 20vw;
  }
}
@media (min-width: 1200px) {
  .grid__tablet {
    width: 1200px;
    padding-left: calc((100vw - 1200px)/2);
    padding-right: calc((100vw - 1200px)/2);
  }
}
@media screen and (min-width: 600px) and (max-width: 1000px) {
  .grid__tablet {
    display: grid;
  }
}
.grid__mobile {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 50px;
  grid-row-gap: 8px;
  padding-left: 15vw;
  padding-right: 15vw;
  height: 100%;
  margin: 0;
}
@media (min-width: 600px) {
  .grid__mobile {
    grid-template-columns: repeat(8, 1fr);
    grid-column-gap: 50px;
    grid-row-gap: 8px;
    padding-left: 10vw;
    padding-right: 10vw;
  }
}
@media (min-width: 1000px) {
  .grid__mobile {
    grid-template-columns: repeat(12, 1fr);
    grid-column-gap: 50px;
    grid-row-gap: 8px;
    padding-left: 20vw;
    padding-right: 20vw;
  }
}
@media (min-width: 1200px) {
  .grid__mobile {
    width: 1200px;
    padding-left: calc((100vw - 1200px)/2);
    padding-right: calc((100vw - 1200px)/2);
  }
}
@media (min-width: 600px) {
  .grid__mobile {
    display: none;
  }
}

@keyframes grow {
  from {
    transform: scaleY(0);
  }
}
/* import your style files below */
/* all components files */
/* stylise paragraph, links and title here */
/* all layout files */
/* make sure this import stayed below all */
/* global classes */
.invisible {
  display: none;
}
